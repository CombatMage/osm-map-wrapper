apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// javadoc currently breaks with kotlin files and bintray
tasks.withType(Javadoc) {
    enabled = false
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'osm-map-wrapper'

    publishedGroupId = 'org.neidhardt'
    libraryName = 'osm-map-wrapper'
    artifact = 'osm-map-wrapper'

    libraryDescription = 'osm-map-wrapper provides an aditional layer for osm android libraries (for example mapsforge). It proves convience methods'

    siteUrl = 'https://github.com/CombatMage/osm-map-wrapper'
    gitUrl = 'https://github.com/CombatMage/osm-map-wrapper.git'

    libraryVersion = '0.2.0'

    developerId = 'combatmage'
    developerName = 'Eric Neidhardt'
    developerEmail = 'eric.neidhardt@gmail.com'

    licenseName = 'MIT license'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT license"]
}

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
    }
}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:26.1.0"

    // GooglePlay Services
    implementation "com.google.android.gms:play-services-location:11.8.0"

    // MapForge
    implementation 'org.mapsforge:mapsforge-core:0.9.0'
    implementation 'org.mapsforge:mapsforge-map:0.9.0'
    implementation 'org.mapsforge:mapsforge-map-reader:0.9.0'
    implementation 'org.mapsforge:mapsforge-themes:0.9.0'
    implementation 'net.sf.kxml:kxml2:2.3.0'
    implementation 'org.mapsforge:mapsforge-map-android:0.9.0'
    implementation 'com.caverock:androidsvg:1.2.2-beta-1'

    //Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'org.robolectric:robolectric:3.5.1'
    testImplementation 'org.robolectric:shadows-multidex:3.5.1'
    testImplementation 'org.robolectric:shadows-support-v4:3.3.2'
}

apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId // Maven Group ID for the artifact

// Bintray section
// make sure that you have the following in your local.properties
// bintray.user=<your user name>
// bintray.apikey=<your api key
apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    pom {
        project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            // Add your description here
            name libraryName
            description libraryDescription
            url siteUrl

            // Set your license
            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl

            }
        }
    }.writeTo("$buildDir/poms/pom-default.xml")

    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                // optional GPG encryption. Default is false.
                sign = false
                //passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}